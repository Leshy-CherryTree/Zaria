<?xml version="1.0" encoding="UTF-8"?>
<!-- You may freely edit this file. See commented blocks below for -->
<!-- some examples of how to customize the build. -->
<!-- (If you delete it and reopen the project it will be recreated.) -->
<!-- By default, only the Clean and Build commands use this build script. -->
<!-- Commands such as Run, Debug, and Test only use this build script if -->
<!-- the Compile on Save feature is turned off for the project. -->
<!-- You can turn off the Compile on Save (or Deploy on Save) setting -->
<!-- in the project's Project Properties dialog box.-->
<project name="Zone_Editor" default="default" basedir=".">
    <description>Builds, tests, and runs the project Zone Editor.</description>
    <import file="nbproject/build-impl.xml"/>
		
	<target name="-pre-compile" description="Sets the buildversion for the current build">

		<taskdef name="helpanalysis" classname="eu.cherrytree.zaria.help.analyzer.HelpFileAnalyzer" classpath="${run.classpath}"/>
		<helpanalysis baseDir="${basedir}" dir="${src.dir}"/>
		
		<!-- exec outputproperty="svna.version" executable="svnversion">
			<arg value="-c" />
			<redirector>
				<outputfilterchain>
					<tokenfilter>
						<replaceregex pattern="^[0-9]*:?" replace="" flags="g"/>
						<replaceregex pattern="M" replace="" flags="g"/>
					</tokenfilter>
				</outputfilterchain>
			</redirector>
		</exec -->

		<propertyfile file="${src.dir}/eu/cherrytree/zaria/editor/appproperties/version.properties">
			<!--entry key="REVISION" value="${svna.version}" type="int" operation="="/-->
			<entry key="BUILD" value="1" type="int" operation="+"/>
		</propertyfile>

	</target>

    <!--
      -pre-init:                 called before initialization of project properties
      -post-init:                called after initialization of project properties
      -pre-compile:              called before javac compilation
      -post-compile:             called after javac compilation
      -pre-compile-single:       called before javac compilation of single file
      -post-compile-single:      called after javac compilation of single file
      -pre-compile-test:         called before javac compilation of JUnit tests
      -post-compile-test:        called after javac compilation of JUnit tests
      -pre-compile-test-single:  called before javac compilation of single JUnit test
      -post-compile-test-single: called after javac compilation of single JUunit test
      -pre-jar:                  called before JAR building
      -post-jar:                 called after JAR building
      -post-clean:               called after cleaning build products
    -->

</project>
